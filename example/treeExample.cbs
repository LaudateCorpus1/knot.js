body{
    knotDataContext:/model
}

#treeView{
    foreach:*categories =>treeItem;
}
#treeItem>div:first-child{
    class:*isSelected=>boolToClassConverter;
    @click: onTreeItemClicked;
}
#treeItem>div:first-child span{
    text:*title
}

#treeItem>div:last-child{
    foreach: *children =>treeItem;
    style-display: *isExpanded =>visibleControl
}

#treeItem button {
    text: *isExpanded =>boolToExpandSymbol;
    style-opacity: *children.length =>boolToOpacity;
    disabled: *children.length =>enableControl;
    @click: onExpandButtonClicked
}

.disableWhenNoCategorySelected{
    disabled: */model.selectedCategory=>enableControl;
}

#textCategoryTitle{
    value: */model.selectedCategory.title =!mustNotNull;
}


#peopleList{
    foreach:*selectedCategory.peopleList;
}

#peopleList>div{
    class:*isSelected=>boolToClassConverter;
    @click:onPeopleClicked
}

#peopleList>div span [0]{
    text:*sex=>sexToTitle
}
#spanName{
    text:*name
}
#spanAge{
    text:*age
}
#spanFrom{
    text:*from
}


#editArea input[type="text"] [0]{
    value:*selectedPeople.name =!mustNotNull & duplicatedName;
}
#editArea .errorMessage [0]{
    style:{
        display:!selectedPeople.name=>visibleControl
    };
    text:!selectedPeople.name
}

#editArea input[type="text"] [1]{
    value:*selectedPeople.age =!mustNotNull & checkInteger&ageRange;
}
#editArea .errorMessage [1]{
    style:
    {
        display:!selectedPeople.age=>visibleControl
    };
    text:!selectedPeople.age
}

#editArea select [0]{
    selected:*selectedPeople.sex;
}
#editArea select [1]{
    selected:*selectedPeople.from;
    foreach:/countries
}

.disableWhenNoSelection{
    disabled:*/model.selectedPeople=>enableControl;
}

#selectFromOptionTemplate{
    text:--self
}
