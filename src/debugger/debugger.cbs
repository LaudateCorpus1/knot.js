body{
    dataContext:/debuggerModel;
}

#domViewer{
    style.display:#viewerSelection.selectedIndex>{return value==0?"block":"none";}
}

#logViewer{
    style.display:#viewerSelection.selectedIndex>{return value==1?"block":"none";}
}


#domTree{
    foreach < nodeTemplate: domTreeNodes
}


#nodeTemplate .expander>i{
    @click:@{this.isExpanded = !this.isExpanded;};
    class:isExpanded>{return value?"+fa-minus-circle -fa-plus-circle":"-fa-minus-circle +fa-plus-circle";}
}

#nodeTemplate .nodeTitle{
    textContent: description
}
#nodeTemplate .highlightMark{
    style.display:isHighlighted>{return value?"inline-block":"none";}
}

#nodeTemplate .locateElementButton{
    @click:@/debuggerModel.locateElement
}
#nodeTemplate .checkDataContextButton{
    style.display:dataContext>{return value?"inline-block":"none"};
    @click:@/debuggerModel.checkDataContext
}

#nodeTemplate .knotList{
    foreach<knotsListItemTemplate :options;
    style.display:options>{return (value&&value.length>0)?"block":"none";}
}

#nodeTemplate .nodeChildren{
    foreach < nodeTemplate: childrenInfo;
    style.display:childrenInfo>{return (value&&value.length>0)?"block":"none";}
}

#nodeTemplate .collapsibleContent{
    style.display : isExpanded>{return value?"block":"none";}
}



#knotsListItemTemplate .knotOption{
    textContent:description
}

#knotsListItemTemplate .knotValueDirection, #knotsListItemTemplate .knotValue, #knotsListItemTemplate .knotValueDetail{
    style.display:latestValueInfo>{return value?"inline-block":"none";};
}

#knotsListItemTemplate .knotValueDirection{
    class:latestValueInfo.isFromLeftToRight>{return value?"+fa-angle-double-right -fa-angle-double-left":"-fa-angle-double-right +fa-angle-double-left";}
}

#knotsListItemTemplate .knotValue{
    colorSet_innerText,#0bac45,transparent: latestValueInfo.value >{return JSON.stringify(value);}
}

 #knotsListItemTemplate .knotValueDetail{
    @click:@/debuggerModel.showKnotDetail
 }


